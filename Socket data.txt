		........................Server creation with discription..........
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Net;
using System.Net.Sockets;

namespace SockServer
{
    internal class Program
    {
        static void Main(string[] args)
        {      //We need socket  to create server side  its socket
            Socket listenerSocket = new Socket(AddressFamily.InterNetwork,SocketType.Stream, ProtocolType.Tcp);
            //Now we need to assign veriable which accept id
            IPAddress ipaddr = IPAddress.Any;
            //we asign (IPAddress.Any;) because this class accept any ip in out machine
            //Now we need tpo define IP and port by IPEndPount Method
            IPEndPoint ipep=new IPEndPoint(ipaddr,23000);
            //Now we bind IP with socket 
            listenerSocket.Bind(ipep);
            //Now Assign how many clint can connect with our socket
            listenerSocket.Listen(5);
            Console.WriteLine("About To accept incomming clint.....");
            //Now we use accept method to accept request by clint foer connection
            //listenerSocket.Accept();
            //if we want to recieve message from clint we use above command like
            Socket Client = listenerSocket.Accept();
            // We recieve mesage when clint connect to server by using bellow line
            Console.WriteLine("CLint may connected : "+ Client.ToString());
            //NOw we need memory to stor recieve data {.recieve} is recieve every type of data i.e image text
            // voices data we 
            // we need to define data type to our program and alocate memory we recieve data in int  form
            // so se make arry of byte..
            byte[] buff = new byte[128];
            //now for recieve data by clint we use .Recieve method and pass a parameters
            //where our data store 
            int numberOfRecievedBytes = Client.Receive(buff);
            //to print no of bytes send by clint 
            Console.WriteLine("No of bytes sent by clint : "+numberOfRecievedBytes);
            // to recieve deta by clint which is store in buff 
            Console.WriteLine("Clint sene data :" + buff);
            // data recieve is in byte form (Computer understanable) to convert data itno (human understandable)
            //we use bellow method
            string recievedText=Encoding.ASCII.GetString(buff, 0, numberOfRecievedBytes);
            //in above method there are three parameters whoch shows 
            //P1 :where data store
            //P2 :From which index our data start encoded
            //P3 : How many bytes encode
            //now to print data recieve
            Console.WriteLine("Data Send by clint : "+recievedText);
            Console.Read();
        }
    }
}
				     ..................Server creation without discription.............
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Net;
using System.Net.Sockets;

namespace SockServer
{
    internal class Program
    {
        static void Main(string[] args)
        {     
            Socket listenerSocket = new Socket(AddressFamily.InterNetwork,SocketType.Stream, ProtocolType.Tcp);
            IPAddress ipaddr = IPAddress.Any;
            IPEndPoint ipep=new IPEndPoint(ipaddr,23000);
            listenerSocket.Bind(ipep);
            listenerSocket.Listen(5);
            Console.WriteLine("About To accept incomming clint.....");
            Socket Client = listenerSocket.Accept();
            Console.WriteLine("CLint may connected : "+ Client.ToString());
            byte[] buff = new byte[128];
            int numberOfRecievedBytes = Client.Receive(buff);
            Console.WriteLine("No of bytes sent by clint : "+numberOfRecievedBytes);
            Console.WriteLine("Clint sene data :" + buff);
            string recievedText=Encoding.ASCII.GetString(buff, 0, numberOfRecievedBytes);
            Console.WriteLine("Data Send by clint : "+recievedText);
            Console.Read();
        }
    }
}
										..........Clint recieve his messag server send its msg back.......
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Net;
using System.Net.Sockets;

namespace SockServer
{
    internal class Program
    {
        static void Main(string[] args)
        {
            Socket listenerSocket = new Socket(AddressFamily.InterNetwork, SocketType.Stream, ProtocolType.Tcp);
            IPAddress ipaddr = IPAddress.Any;
            IPEndPoint ipep = new IPEndPoint(ipaddr, 23000);
            listenerSocket.Bind(ipep);
            listenerSocket.Listen(5);
            Console.WriteLine("About To accept incomming clint.....");
            Socket Client = listenerSocket.Accept();
            Console.WriteLine("CLint may connected : " + Client.ToString());
            byte[] buff = new byte[128];
            int numberOfRecievedBytes = 0;
            //to send data many time we use loop
            while (true)
            {
                numberOfRecievedBytes = Client.Receive(buff);
                Console.WriteLine("No of bytes sent by clint : " + numberOfRecievedBytes);
                Console.WriteLine("Clint sene data :" + buff);
                string recievedText = Encoding.ASCII.GetString(buff, 0, numberOfRecievedBytes);
                Console.WriteLine("Data Send by clint : " + recievedText);
                //clint ko data send back kny k lye hm .Send method use kren gy
                //peremeters me buff write kia hy jis waja sy clint ny jo data bheja wo buff me store hua
                //wohi  clint ko wapis mily ga
                Client.Send(buff);
                // agar program ko bnd krna ho 
                if (recievedText == "x")
                {
                    break;
                }
                //ab data ko clear krny k lye jo buff me hy taky clint again data bhejy to us data ko
                //again buff me stoe krwa sken hum buff ko clear krean gy
                Array.Clear(buff, 0, buff.Length);
                numberOfRecievedBytes = 0;
                Console.Read();
            }

        }
    }
}

				...........Clint recieve his messag server send its msg back With out detail..........
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Net;
using System.Net.Sockets;

namespace SockServer
{
    internal class Program
    {
        static void Main(string[] args)
        {
            Socket listenerSocket = new Socket(AddressFamily.InterNetwork, SocketType.Stream, ProtocolType.Tcp);
            IPAddress ipaddr = IPAddress.Any;
            IPEndPoint ipep = new IPEndPoint(ipaddr, 23000);
            listenerSocket.Bind(ipep);
            listenerSocket.Listen(5);
            Console.WriteLine("About To accept incomming clint.....");
            Socket Client = listenerSocket.Accept();
            Console.WriteLine("CLint may connected : " + Client.ToString());
            byte[] buff = new byte[128];
            int numberOfRecievedBytes = 0;
            while (true)
            {
                numberOfRecievedBytes = Client.Receive(buff);
                Console.WriteLine("No of bytes sent by clint : " + numberOfRecievedBytes);
                Console.WriteLine("Clint sene data :" + buff);
                string recievedText = Encoding.ASCII.GetString(buff, 0, numberOfRecievedBytes);
                Console.WriteLine("Data Send by clint : " + recievedText);

                Client.Send(buff);
 
                if (recievedText == "x")
                {
                    break;
                }
                
                Array.Clear(buff, 0, buff.Length);
                numberOfRecievedBytes = 0;
                Console.Read();
            }

        }
    }
}
				.....................multiple clints Connection.............
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Net;
using System.Net.Sockets;

namespace SockServer
{
    internal class Program
    {
        static void Main(string[] args)
        {
            Socket listenerSocket = new Socket(AddressFamily.InterNetwork, SocketType.Stream, ProtocolType.Tcp);
            IPAddress ipaddr = IPAddress.Any;
            IPEndPoint ipep = new IPEndPoint(ipaddr, 23000);
            listenerSocket.Bind(ipep);
            listenerSocket.Listen(5);
            Console.WriteLine("About To accept incomming clint.....");
            Socket Client =default(Socket);
            int counter = 0;
            while (true)
            {   counter++;
                 Client = listenerSocket.Accept();
                Console.WriteLine("CLint may connected : " + Client.ToString());
            }
            byte[] buff = new byte[128];
            int numberOfRecievedBytes = 0;         
            while (true)
            {
                numberOfRecievedBytes = Client.Receive(buff);
                Console.WriteLine("No of bytes sent by clint : " + numberOfRecievedBytes);
                Console.WriteLine("Clint sene data :" + buff);
                string recievedText = Encoding.ASCII.GetString(buff, 0, numberOfRecievedBytes);
                Console.WriteLine("Data Send by clint : " + recievedText); 
                if (recievedText == "x")
                {
                    break;
                }
                Array.Clear(buff, 0, buff.Length);
                numberOfRecievedBytes = 0;
                Console.Read();
            }

        }
    }
}
...........incomp 
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Net;
using System.Net.Sockets;
using System.Threading;

namespace SockServer
{
    internal class Program
    {
        static void Main(string[] args)
        {
            Socket listenerSocket = new Socket(AddressFamily.InterNetwork, SocketType.Stream, ProtocolType.Tcp);
            IPAddress ipaddr = IPAddress.Any;
            IPEndPoint ipep = new IPEndPoint(ipaddr, 23000);
            listenerSocket.Bind(ipep);
            listenerSocket.Listen(5);
            Console.WriteLine("About To accept incomming clint.....");
            Socket Client = default(Socket);
            int counter = 0;
            Program p = new Program();  
            while (true)
            {
                counter++;
                Client = listenerSocket.Accept();
                Console.WriteLine("CLint may connected : " + Client.ToString());
                Thread UserThread=new Thread(new ThreadStart(() => p.User(Client)));
                UserThread.Start();
            }
            byte[] buff = new byte[128];
            int numberOfRecievedBytes = 0;
            while (true)
            {
                numberOfRecievedBytes = Client.Receive(buff);
                Console.WriteLine("No of bytes sent by clint : " + numberOfRecievedBytes);
                Console.WriteLine("Clint sene data :" + buff);
                string recievedText = Encoding.ASCII.GetString(buff, 0, numberOfRecievedBytes);
                Console.WriteLine("Data Send by clint : " + recievedText);
                Client.Send(buff, 0, SocketFlags.None);
                if (recievedText == "x")
                {
                    break;
                }
                Array.Clear(buff, 0, buff.Length);
                numberOfRecievedBytes = 0;
                Console.Read();
            }

        }

        private void User(Socket client)
        {
         
        }
    }
}
